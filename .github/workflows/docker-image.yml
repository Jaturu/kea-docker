name: Docker Image CI

# on:
  # push:
  #   branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]
on: 
  workflow_dispatch:
    inputs:
      version:
        description: 'Set ISC KEA package version to install in the docker image. These are fetched from Cloudsmith during the image build. https://kb.isc.org/docs/isc-kea-packages'     
        required: true
        default: '2.7.7'

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME: ${{ github.repository }}
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1
  
jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
        image:
          - kea-dhcp4

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      
    steps:
    - name: Checkout repository
      id: checkout
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      id: login
      uses: docker/login-action@v3.4.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Set up Docker buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.7.0
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}-${{ matrix.image }}
      env:
        DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
    
    - name: Build and push docker image ${{ matrix.image }} ${{ matrix.platform }}
      id: push
      uses: docker/build-push-action@v6
      with:
        provenance: false
        context: ./${{ matrix.image }}
        file: ./${{ matrix.image }}/Dockerfile
        platforms: ${{ matrix.platform }}
        build-args: |
          VERSION=${{ github.event.inputs.version }}
        tags: ${{ steps.meta.outputs.tags }}
        annotations: ${{ steps.meta.outputs.annotations }}
        labels: ${{ steps.meta.outputs.labels }}
        # outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=multi-arch image
        outputs: |
          type=registry,name=${{ env.REGISTRY }}/${{ github.repository }}-${{ matrix.image }}:${{ github.event.inputs.version }},name-canonical=true
